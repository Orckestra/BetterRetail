@inherits Composer.Razor.ComposerRazorFunction
@using Orckestra.Composer.SearchQuery.Context
@using Orckestra.Overture.ServiceModel.SearchQueries

@functions {
    public override string FunctionDescription
    {
        get { return "Display product sets results"; }
    }
    public ISearchQueryContext SearchQueryContext { get; set; }

    [FunctionParameter(Label = "Query Name", Help = "Query Name", WidgetMarkup = Orckestra.ExperienceManagement.SearchQueryBuilder.Widgets.ProductSetQuerySelector)]
    public string QueryName { get; set; }
}

@{
    var queryViewModel = SearchQueryContext.GetSearchQueryViewModelAsync(SearchQueryType.ProductSet, QueryName).Result;
    if (queryViewModel.ProductSearchResults.TotalCount <= 0)
    {
        return;
    }
}


<html xmlns="http://www.w3.org/1999/xhtml" xmlns:f="http://www.composite.net/ns/function/1.0" xmlns:v-bind="v-bind" xmlns:v-on="v-on">
<head>
</head>
<body>
    @Function("Composer.Search.Products.ProductResultsVue", new { Results = queryViewModel })
</body>
</html>

