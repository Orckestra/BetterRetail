$transparencies: () !default;
$transparencies: map-merge(
  (
    100: 0,
    90: .1,
    80: .2,
    70: .3,
    60: .4,
    50: .5,
    40: .6,
    30: .7,
    20: .8,
    10: .9,
    0 : 1
  ),
  $transparencies
);

@mixin bg-variant-opacity($parent, $color, $ignore-warning: false) {
    @each $transparency, $value in $transparencies {
        #{$parent}-#{$transparency} {
        background-color: transparentize($color, $value) !important;
        }
        a#{$parent}-#{transparency},
        button#{$parent}-#{transparency} {
        @include hover-focus() {
            background-color: darken(transparentize($color, $value), 10%) !important;
        }
        }
    }
  }

@mixin bg-variant-tint($parent, $color, $ignore-warning: false) {
    @each $tint, $value in $transparencies {
        #{$parent}-#{$tint} {
        background-color: mix($color, #fff, $tint * 1%) !important;
        }
        a#{$parent}-#{$tint},
        button#{$parent}-#{$tint} {
        @include hover-focus() {
            background-color: darken(mix($color, #fff, $tint * 1%), 10%) !important;
        }
        }
    }
  }

@each $color, $value in $theme-colors {
    @include bg-variant-opacity(".bg-#{$color}-opacity", $value, true);
  }





@each $color, $value in $theme-colors {
    @include bg-variant-tint(".bg-#{$color}", $value, true);
  }

.bg-selected {
    background-color: #ebf1f3 !important;
}