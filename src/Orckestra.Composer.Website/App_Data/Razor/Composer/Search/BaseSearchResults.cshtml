@inherits Composer.Razor.ComposerRazorFunction
@using Orckestra.Composer.Search.Context;
@using Orckestra.Composer.Search.ViewModels;
@using Newtonsoft.Json

@functions {
    [FunctionParameter(Label = "", Help = "")]
    public BaseSearchViewModel Results { get; set; }

    [FunctionParameter(Label = "", Help = "", DefaultValue = true)]
    public bool ShowPagination { get; set; }
}
@{
    string vueId = "vueSearchResults" + Guid.NewGuid().ToString("N");
}

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:f="http://www.composite.net/ns/function/1.0" xmlns:v-bind="v-bind" xmlns:v-on="v-on">
<head>
</head>
<body>
    <div data-oc-controller="Product.SearchResults"
         data-context="@JsonConvert.SerializeObject(Results, new Newtonsoft.Json.Converters.StringEnumConverter())"
         data-vueid="@vueId"
         id="@vueId"
         v-cloak="true"
         class="search-results">
        <div class="overlay" v-if="isLoading"></div>
        @if (ShowPagination)
        {
            <div class="row filters-row mb-4" v-if="TotalCount > 0">
                <div class="col-6 d-lg-none">
                    @FacetHelpers.FacetsModalCollapseBtn()
                </div>
                <div class="col-6">
                    @SearchHelpers.SortBy()
                </div>
                <div class="col-6 d-none d-lg-block">
                    @SearchHelpers.PaginationDropdown()
                </div>
            </div>
        }
        <template v-if="TotalCount > 0">
            <div class="row">
                <div v-for="(Product, index) in SearchResultsData" class="col-6  col-md-4  col-xl-4 mb-5" data-qa="search-results" v-bind:key="Product.ProductId + Product.VariantId">
                    @Function("Composer.Search.Products.ProductTileVue")
                </div>
            </div>
        </template>

        @if (ShowPagination)
        {
            <div class="row d-block pt-2" v-if="TotalCount > 0">
                @SearchHelpers.Pagination()
            </div>
        }
    </div>
</body>
</html>
