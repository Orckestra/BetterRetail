@inherits RazorFunction
@using System.Globalization
@using Orckestra.Composer.Recipes
@using Orckestra.Composer.Recipes.DataTypes
@using Composite.Data
@using System.Threading

@functions {
    public override string FunctionDescription
    {
        get { return "Recipes List Details"; }
    }

    [FunctionParameter(Label = "Recipe count", Help = @"The number of recipes to display on the page (6 by default).", DefaultValue = 6)]
    public int PageSize { get; set; }

    [FunctionParameter]
    public RoutedData<Orckestra.Composer.Recipes.DataTypes.IRecipe> RecipeData { get; set; }

    public IRecipeUrlProvider RecipeUrlProvider { get; set; }

}

@{

    var difficulties = DataFacade.GetData<IDifficulty>().ToLookup(_ => _.Id.ToString());
}

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:f="http://www.composite.net/ns/function/1.0" xmlns:v-bind="v-bind" xmlns:v-on="v-on">
<head>
</head>
<body>
    @if (RecipeData.IsItem)
    {
        @Function("Grocery.Recipes.Details", new { Item = RecipeData.Item })
    }
    else
    {
        <h1>@CurrentPageNode.Title</h1>
        var categoriesLookup = DataFacade.GetData<IRecipeMealType>().ToLookup(_ => _.Id.ToString());
        var recipeCategories = RecipeData.List.GroupBy(i => i.MealType).OrderBy(g => categoriesLookup[g.Key.ToString()].FirstOrDefault().Order).ToList();
        var categoryItemsCount = 3;
        <div data-oc-controller="Grocery.RecipeList"
             id="vueRecipeList">
            @foreach (var group in recipeCategories)
            {
                var items = group.Take(categoryItemsCount);
                var categoryTitle = categoriesLookup[group.Key.ToString()].FirstOrDefault().Title;
                <h2 class="recipe-category-title">@categoryTitle (@group.Count())</h2>
                <div class="row">
                    @foreach (var item in items)
                    {
                        var imgURL = Html.C1().MediaUrl(item.Image);
                        var itemTitle = item.Title;
                        var itemURL = RecipeData.ItemUrl(item);
                        var hasCookingTime = (item.CookingTime > 0);
                        var cookingTime = hasCookingTime ? item.CookingTime : 0;
                        var hasPrepTime = (item.PreparationTime > 0);
                        var preparationTime = hasPrepTime ? item.PreparationTime : 0;
                        var difficulty = difficulties[item.Difficulty.ToString()].FirstOrDefault().Title;
                        var servings = item.Servings;
                        <div class="col-12 col-sm-6 col-lg-4 mb-4">
                            <div class="card h-100 recipe-tile">
                                @if (imgURL != null)
                                {
                                    <span class="recipe-tile-media">
                                        <a href="@itemURL">
                                            <img class="card-img-top" src="@imgURL?h=200" alt="@itemTitle" />
                                        </a>
                                        <div class="product-tile-recipelist">
                                            <button data-qa="add-to-recipelist" v-on:click="setFavorite('@item.Id', IsFavorite('@item.Id'))" class="btn border-0 rounded-0 add-to-recipelist">
                                                <i class="fa" v-bind:class="{' fa-heart text-danger' : IsFavorite('@item.Id'), 'fa-heart-o' : !IsFavorite('@item.Id')}" aria-hidden="true"></i>
                                                <span class="sr-only">@Html.Localize("MyAccount", "H_AddToRecipeList")</span>
                                            </button>
                                        </div>
                                    </span>
                                }
                                <div class="card-body d-flex flex-column justify-content-between">
                                    <div class="card-title">
                                        <h3 class="h5"><a href="@itemURL">@itemTitle</a></h3>
                                    </div>
                                    <span class="recipe-info-table">
                                        @if (!string.IsNullOrWhiteSpace(difficulty))
                                        {
                                            <span class="recipe-info-table-cell">

                                                <span class="recipe-info-type"><i class="fa fa-spoon recipe-info-icon" aria-hidden="true"></i> @Html.Localize("Recipes", "L_Difficulty")</span>
                                                <span class="recipe-info-value">@difficulty</span>
                                            </span>
                                        }
                                        @if (hasCookingTime || hasPrepTime)
                                        {
                                            <span class="recipe-info-table-cell">

                                                <span class="recipe-info-type"><i class="fa fa-blender recipe-info-icon" aria-hidden="true"></i> @Html.Localize("Recipes", "L_TotalTime")</span>
                                                <span class="recipe-info-value">@(cookingTime + preparationTime) @Html.Localize("Recipes", "L_Minutes")</span>
                                            </span>
                                        }
                                        @if (!string.IsNullOrWhiteSpace(servings))
                                        {
                                            <span class="recipe-info-table-cell">

                                                <span class="recipe-info-type"><i class="fa fa-chart-pie recipe-info-icon" aria-hidden="true"></i> @Html.Localize("Recipes", "L_Serves")</span>
                                                <span class="recipe-info-value">@servings</span>
                                            </span>
                                        }
                                    </span>
                                </div>
                            </div>
                        </div>
                    }
                </div>
                if (group.Count() > categoryItemsCount)
                {
                    <div class="mb-3 text-center">
                        <a href="@RecipeUrlProvider.BuildRecipeMealTypeUrl(group.Key, Thread.CurrentThread.CurrentCulture)" class="btn btn-default">View All @categoryTitle </a>
                    </div>
                }
            }
        </div>
    }
</body>
</html>
