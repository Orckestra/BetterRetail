@inherits RazorFunction
@using System.Globalization
@using System.Threading
@using Orckestra.Composer.Recipes.DataTypes
@using Orckestra.Composer.Recipes.ViewModels
@using Orckestra.Composer.Recipes.Services
@using Composite.Data
@using Newtonsoft.Json;
@using Orckestra.Composer.Recipes

@functions {
    public override string FunctionDescription
    {
        get { return "Recipes Details"; }
    }

    public IRecipesViewService RecipesViewService { get; set; }
    public IRecipeUrlProvider RecipeUrlProvider { get; set; }

    [FunctionParameter]
    public Orckestra.Composer.Recipes.DataTypes.IRecipe Item { get; set; }

}

@{
    var difficulty = DataFacade.GetData<IDifficulty>().FirstOrDefault(l => l.Id == Item.Difficulty);
    var mealType = DataFacade.GetData<IRecipeMealType>().FirstOrDefault(l => l.Id == Item.MealType);
    var dishType = DataFacade.GetData<IDishType>().FirstOrDefault(l => l.Id == Item.DishType);
    var dietTypes = DataFacade.GetData<IDietType>().Where(l => Item.DietType != null && Item.DietType.Contains(l.Id.ToString())).ToList();
    var cuisineType = DataFacade.GetData<ICuisineType>().FirstOrDefault(l => l.Id == Item.CuisineType);
    var inRecipeList = false; // later can be used with actual RecipeList
    var ingredientsLists = RecipesViewService.GetIngedientsListsViewModel(Item.Id);
}

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:f="http://www.composite.net/ns/function/1.0" xmlns:v-bind="v-bind" xmlns:v-on="v-on">
<head>
    <title>@Item.Title</title>
    @if (!string.IsNullOrEmpty(Item.Keywords))
    {
        <meta name="keywords" content="@Item.Keywords" />
    }
</head>
<body>
    <div data-oc-controller="Grocery.RecipeDetails" data-context="@JsonConvert.SerializeObject(ingredientsLists)" data-recipeId="@Item.Id" data-searchUrl="@RecipeUrlProvider.GetSearchPageUrl(Thread.CurrentThread.CurrentCulture)">
        <div id="vueRecipeDetails">
            <div class="row">
                <div class="col-12">
                    <h1>
                        @Item.Title
                    </h1>
                    <div class="recipe-info">
                        @if (mealType != null)
                        {
                            <span class="recipe-info-item"><span class="font-weight-bold">@mealType.Title</span></span>
                        }
                        @if (Item.PreparationTime.HasValue || Item.CookingTime.HasValue)
                        {
                            <span class="recipe-info-item"><span class="font-weight-bold">@Html.Localize("Recipes", "L_TotalTime")</span>: @((Item.CookingTime ?? 0) + (Item.PreparationTime ?? 0)) @Html.Localize("Recipes", "L_Minutes")</span>
                        }
                    </div>
                    <div class="recipe-info-table">
                        @if (difficulty != null)
                        {
                            <div class="recipe-info-table-cell">
                                <span class="fa fa-spoon recipe-info-icon"></span>
                                <span class="recipe-info-type">@Html.Localize("Recipes", "L_Difficulty")</span>
                                <span class="recipe-info-value">@difficulty.Title</span>
                            </div>
                        }
                        @if (Item.PreparationTime.HasValue)
                        {
                            <div class="recipe-info-table-cell">
                                <span class="fa fa-blender recipe-info-icon"></span>
                                <span class="recipe-info-type">@Html.Localize("Recipes", "L_Preparation")</span>
                                <span class="recipe-info-value">@Item.PreparationTime @Html.Localize("Recipes", "L_Minutes")</span>
                            </div>
                        }
                        @if (Item.CookingTime.HasValue)
                        {
                            <div class="recipe-info-table-cell">
                                <span class="fa fa-fire-alt recipe-info-icon"></span>
                                <span class="recipe-info-type">@Html.Localize("Recipes", "L_CookingTime")</span>
                                <span class="recipe-info-value">@Item.CookingTime @Html.Localize("Recipes", "L_Minutes")</span>
                            </div>
                        }
                        @if (!string.IsNullOrWhiteSpace(Item.Servings))
                        {
                            <div class="recipe-info-table-cell">
                                <span class="fa fa-chart-pie recipe-info-icon"></span>
                                <span class="recipe-info-type">@Html.Localize("Recipes", "L_Serves")</span>
                                <span class="recipe-info-value">@Item.Servings</span>
                            </div>
                        }
                    </div>

                    <div class="recipe-action-bar mt-2">
                        <div>@Html.Raw(Item.Description)</div>
                        <button class="btn btn-outline-secondary text-nowrap"><span class="fa fa-print px-1"></span> @Html.Localize("Recipes", "L_Print")</button>
                    </div>
                </div>

                <div class="col-12 order-first mb-3">
                    @if (!string.IsNullOrWhiteSpace(Item.Image))
                    {
                        <div class="recipe-img">
                            <img src="/media(@Item.Image)?h=520"/>
                            <div class="recipe-like">
                                <a data-qa="add-to-recipelist" title="@Html.Localize("MyAccount", "H_AddToRecipeList")" v-on:click="setFavorite" class="add-to-recipelist p-0">
                                    <i class="fa" v-bind:class="{'fa-heart text-danger' : IsRecipeFavorite, 'fa-heart-o' : !IsRecipeFavorite}"></i>
                                </a>
                            </div>
                        </div>
                    }

                    @if (dishType != null || dietTypes != null || cuisineType != null)
                    {
                        <div class="recipe-info-item">

                            @if (cuisineType != null)
                            {
                                <span class="badge badge-pill badge-primary p-1">@cuisineType.Title</span>
                            }

                            @if (dishType != null)
                            {
                                <span class="badge badge-pill badge-light p-1">@dishType.Title</span>
                            }

                            @if (dietTypes != null)
                            {
                                foreach (var diet in dietTypes)
                                {
                                    <span class="badge badge-pill badge-secondary p-1">@diet.Title </span>
                                }
                            }
                        </div>
                    }
                </div>
            </div>
            <hr class="my-3" />
            <div class="row">
                <div class="col-12 col-sm-5 recipe-ingredients" v-cloak="true">
                    <h2 class="mb-3">@Html.Localize("Recipes", "L_Ingredients")</h2>
                    @SelectAll()
                    <div v-for="list in IngredientsList">
                        <h4 v-if="!list.HideTitle" class="mt-3 mb-2">{{list.Title}}</h4>
                        <div class="form-group form-check" v-for="item in list.Ingredients">
                            <label class="form-check-label recipe-ingredient" v-bind:class="{'text-danger' : !item.CanBeAddedToCart &amp;&amp; IsIngredientSelected(item.Id) &amp;&amp; AddToCartHasIssues}">
                                <input type="checkbox" class="form-check-input" v-bind:value="item.Id" v-model="SelectedIngredientsIds" name="ingredients" />
                                {{item.Title}}
                            </label>
                            <div v-if="item.ProductInformation" class="recipe-ingredient-product">
                                <div class="product-tile d-flex h-100">
                                    <img class="img-fluid m-auto" xmlns:v-bind="v-bind" v-bind:src="item.ProductInformation.ImageUrl"
                                         v-bind:alt="item.ProductInformation.FullDisplayName"
                                         v-on:error="onImageError($event, item)" />

                                    <div class="product-tile-information">
                                        <div>
                                            <p v-if="item.ProductInformation.Brand" class="product-tile-brand m-0"
                                               data-qa="search-product-brand">
                                                {{item.ProductInformation.Brand}}
                                            </p>

                                            <p class="text-default-font">
                                                {{item.ProductInformation.DisplayName}}
                                            </p>
                                            <div class="product-tile-format">
                                                {{item.ProductInformation.Format}}
                                            </div>
                                        </div>
                                        @ProductHelpers.PriceBasedOnUnitMeasure("item.ProductInformation")
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div v-if="AddToCartSucceeded" class="alert alert-success  text-success">
                        <div class="multiline-message">
                            <span>
                                @Html.Localize("Recipes", "L_ItemsAddedToCartSucsessMessage")
                            </span>
                        </div>
                    </div>
                    <div v-if="AddToCartHasIssues" class="alert alert-danger text-danger">
                        <div class="multiline-message">
                            <span>
                                @Html.Localize("Recipes", "L_ItemsAddedToCartWithIssuesMessage")
                            </span>
                        </div>
                    </div>
                    <div class="row mt-2">
                        <div class="col-6">
                            <button class="btn btn-secondary w-100 " v-bind:disabled="!IsInredientKeywordsSelected || Loading" v-on:click="searchIngredient">@Html.Localize("Recipes", "B_ShopIngredients")</button>
                        </div>
                        <div class="col-6">
                            <button class="btn btn-success w-100" v-bind:disabled="!IsIngredientsSelected || Loading" v-on:click="addIngredientsToCart">@Html.Localize("Recipes", "L_AddRecommendedProducts")</button>
                        </div>
                    </div>
                </div>

                <div class="col-12 col-sm-7 recipe-instructions">
                    <h2>@Html.Localize("Recipes", "L_Instructions")</h2>
                    @Html.Raw(Item.Instructions)
                </div>
            </div>
        </div>
    </div>

</body>
</html>

@helper SelectAll()
{
    <div class="form-group form-check mt-3">
        <label class="form-check-label  font-weight-bold">
            <input type="checkbox" class="form-check-input" name="all" v-model="SelectAll"/>
            @Html.Localize("Recipes", "L_SelectAll")
        </label>
    </div>
}
