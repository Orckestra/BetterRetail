@inherits Composer.Razor.ComposerRazorFunction
@using Orckestra.Overture.ServiceModel.Orders;
@functions {
    public override string FunctionDescription
    {
        get { return "Change Store Modal"; }
    }
}

<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:f="http://www.composite.net/ns/function/1.0"
      xmlns:v-bind="v-bind" xmlns:v-on="v-on">
<head>
</head>
<body>
    <div id="changeStoreModal" data-oc-controller="Grocery.ChangeStoreModal" class="modal store-selector" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content px-sm-3 pt-sm-3">
                <div class="modal-header border-0 py-1">
                    <h4 class="modal-title font-weight-bold">
                        <span v-if="Mode.ChangeMode == 'method'">@Html.Localize("Grocery", "H_ChangeMethodModal")</span>
                        <span v-if="Mode.ChangeMode == 'store'">@Html.Localize("Grocery", "H_ChangeStoreModal")</span>
                        <span v-if="Mode.ChangeMode == 'slot'">@Html.Localize("Grocery", "H_ChangeTimeSlotModal")</span>
                    </h4>
                    <div class="btn-close close" data-dismiss="modal" aria-label="Close">
                        <span class="fa fa-times-circle"></span>
                        <span class="sr-only">@Html.Localize("General", "B_Close")</span>
                    </div>
                </div>
                <div class="modal-body">
                    <div v-if="Mode.ChangeMode == 'method'">
                        @ChangeFulfillmentMethodView()
                    </div>
                    <div v-show="Mode.ChangeMode == 'store'">
                        @ChangeStoreView()
                    </div>
                    <div v-if="Mode.ChangeMode == 'slot'">
                        @ChangeTimeSlotView()
                    </div>
                </div>
                <div class="modal-footer border-0 pt-0">
                    <div class="alert alert-warning">
                        @Html.Localize("Grocery", "L_ChangeStoreWarning")
                    </div>
                </div>
            </div>
        </div>
    </div>
</body>
</html>

@helper ChangeFulfillmentMethodView()
{
    <div class="form-row">
        <div class="col-md-6 pb-3 d-flex" v-for="shippingMethod in ShippingMethodTypes">
            @ShippingMethodTypeOption()
        </div>
    </div>
}

@helper SelectedFulfillmentMethod()
{
    <div v-if="SelectedFulfillment.FulfillmentMethodType" class="mb-2">
        <div class="border p-2">
            <h5 class="m-0">
                <i class="fa mr-1" v-bind:class="SelectedFulfillment.FulfillmentMethodType === '@(FulfillmentMethodType.PickUp)' ? 'fa-store-alt' : 'fa-truck'" />
                <span v-if="SelectedFulfillment.FulfillmentMethodType == '@(FulfillmentMethodType.PickUp)'">@Html.Localize("Grocery", "T_FulfillmentMethodTitle_PickUp")</span>
                <span v-else="else">@Html.Localize("Grocery", "T_FulfillmentMethodTitle_Shipping")</span>
            </h5>
        </div>
        <div class="clearfix">
            <a class="cta dark-blue float-right py-1" href="#" v-on:click.prevent="changeMethod">
                @Html.Localize("Grocery", "B_ChangeFulfillmentMethod")
            </a>
        </div>
    </div>
}

@helper ChangeStoreView()
{
    @SelectedFulfillmentMethod()

    <div class="input-group">
        <input id="changeStoreInput" class="form-control border-right-0" type="text"
               placeholder="@Html.Localize("Store", "I_Placeholder")"
               v-model="PostalCode"
               ref="postalCodeInput"
               xmlns:v-bind="v-bind" />

        <div class="input-group-append">
            <button v-if="PostalCode" class="btn bg-transparent border-top border-bottom" v-on:click="clearPostalCodeInput();">
                <i class="fa fa-times" />
            </button>
            <button class="btn btn-primary text-uppercase"
                    v-on:click="findStores"
                    xmlns:v-bind="v-bind" xmlns:v-on="v-on">
                @Html.Localize("Grocery", "B_Find")
            </button>
        </div>
    </div>

    <div v-if="ShowStoreList">
        <p class="my-3 pb-2 border-bottom">@Html.Localized("Grocery", "T_StoresFound", "{{Stores.length}}")</p>
        <div class="thin-scrollbar vertical" style="max-height: 250px">
            <div class="row">
                <div v-for="(store, index) in Stores" class="col-12 mb-2">
                    @StoreHelpers.StoreListRow("store", false, false)
                </div>
            </div>
        </div>
    </div>
    <div v-if="NoStores" class="alert bg-lighter mt-4">
        @Html.Localize("Grocery", "L_StoresNotAvailableMessage")
    </div>
    @Forms.Validations.ShowError("Errors.StoreSelectionError", "L_StoreSelectionFailed")
}

@helper SelectedStore()
{
    <div v-if="SelectedFulfillment.Store">
        <div class="border p-2 rounded">
            @StoreDetails("SelectedFulfillment.Store")
        </div>
        <div class="clearfix">
            <a class="cta dark-blue float-right py-1" href="#" v-on:click.prevent="changeStore">
                @Html.Localize("Grocery", "B_ChangeStore")
            </a>
        </div>
    </div>
}

@helper ChangeTimeSlotView()
{
    @SelectedFulfillmentMethod()
    @SelectedStore()

    <div v-if="SelectedFulfillment.TimeSlotReservation &amp;&amp; SelectedFulfillment.TimeSlot" class="border p-2 rounded">
        <strong>{{SelectedFulfillment.TimeSlot.DayOfWeekString}}, {{SelectedFulfillment.TimeSlotReservation.Day}} {{SelectedFulfillment.TimeSlotReservation.DisplayMonth}}</strong>
        <p class="m-0">{{SelectedFulfillment.TimeSlot.DisplayBeginTime}} to {{SelectedFulfillment.TimeSlot.DisplayEndTime}}</p>
    </div>

    @Function("Grocery.StoreSelector.TimeSlotCalendar", new { ContainerHeight = 250 })

    <button class="btn btn-outline-primary btn-block text-uppercase  mt-3 modal--cancel" v-on:click="onClickNotNow">
        @Html.Localize("Grocery", "B_NotNow")
    </button>
}

@helper ShippingMethodTypeOption()
{
    <div class="border rounded bg-white p-3 flex-grow-1 shipping-methods"
         v-bind:class="{'selected-method-type bg-selected': SelectedFulfillment.FulfillmentMethodType === shippingMethod.FulfillmentMethodType}">
        <div class="form-check">
            <input class="form-check-input" type="radio"
                   v-bind:value="shippingMethod.FulfillmentMethodType"
                   name="ShippingMethod"
                   v-bind:Id="shippingMethod.FulfillmentMethodType + '-radio'"
                   v-model="SelectedFulfillment.FulfillmentMethodType"
                   xmlns:v-bind="v-bind"
                   xmlns:v-on="v-on"
                   v-on:change="selectFulfillmentMethod" />
            <label class="form-check-label d-block"
                   v-bind:for="shippingMethod.FulfillmentMethodType + '-radio'">
                <strong>
                    <i class="fa mr-1"
                       v-bind:class="shippingMethod.FulfillmentMethodType === '@(FulfillmentMethodType.PickUp)' ? 'fa-store-alt' : 'fa-truck'" />
                    <span v-if="shippingMethod.FulfillmentMethodType == '@(FulfillmentMethodType.PickUp)'">@Html.Localize("Grocery", "T_FulfillmentMethodTitle_PickUp")</span>
                    <span v-else="else">@Html.Localize("Grocery", "T_FulfillmentMethodTitle_Shipping")</span>
                </strong>
                <p class="mb-0 text-height-0">
                    <small v-if="shippingMethod.FulfillmentMethodType === '@(FulfillmentMethodType.PickUp)'">
                        @Html.Localize("Grocery", "L_ShippingMethodDescriptionPickUp")
                    </small>
                    <small v-else="else">
                        @Html.Localize("Grocery", "L_ShippingMethodDescriptionShipping")
                    </small>
                </p>
            </label>
        </div>
    </div>
}

@helper StoreDetails(string vueBinding)
{
    <div class="row justify-content-between">
        <div class="col-12">
            <strong>{{@(vueBinding).LocalizedDisplayName}}</strong>
            <div class="mt-1">
                <small>
                    @StoreHelpers.StoreAddress(vueBinding)
                </small>
            </div>
        </div>
    </div>
}
