@inherits RazorFunction
@using Orckestra.Composer.Search.Context;
@using Orckestra.Composer.Search.ViewModels
@using Orckestra.Composer.Search.Facets

@functions {
    public override string FunctionDescription
    {
        get { return "Saerch Facets"; }
    }

    public ISearchRequestContext SearchRequestContext { get; set; }

    public ProductSearchResultsViewModel ProductSearchResults
    {
        get
        {
            return SearchRequestContext.ProductsSearchViewModel.ProductSearchResults;
        }
    }

    public List<Facet> Facets
    {
        get
        {
            return SearchRequestContext.ProductsSearchViewModel.ProductSearchResults.Facets?.ToList();
        }
    }
}
@{
    if (Facets == null || Facets.Count == 0)
    {
        return;
    };
}

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:f="http://www.composite.net/ns/function/1.0">
<head>
</head>
<body>
    <div data-oc-controller="Product.FacetSearch" data-corrected-search-term="@ProductSearchResults.CorrectedSearchTerms">
        <form name="searchFacets">
            @FacetHelpers.PromotedFacetValues(ProductSearchResults.PromotedFacetValues)

            @foreach (var facet in Facets)
            {
                if (!facet.IsDisplayed)
                {
                    continue;
                }
                <div class="card  bg-light  mb-3  facets-card"
                     data-facetfieldname="@facet.FieldName"
                     data-facettype="@facet.FacetType"
                     data-min="@facet.StartValue"
                     data-max="@facet.EndValue"
                     data-step="@facet.GapSize"
                     data-max-label="@Html.Localize("List-Search", "L_RangeAll")">
                    <div class="card-body"
                         data-qa="search-refiner">
                        <h5>@facet.Title</h5>
                        @FacetHelpers.RenderFacet(facet)
                    </div>
                </div>
            }
        </form>
    </div>
</body>
</html>