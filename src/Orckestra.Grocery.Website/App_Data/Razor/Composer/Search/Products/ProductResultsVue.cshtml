@inherits Composer.Razor.ComposerRazorFunction
@using Newtonsoft.Json;
@using Orckestra.Composer.Search.ViewModels

@functions {
    public override string FunctionDescription
    {
        get { return "Search product results for Vue implementation"; }
    }

    [FunctionParameter(Label = "ColumnsStyle", DefaultValue = "col-12 col-sm-6 col-md-4 col-lg-3")]
    public string ColumnsStyle { get; set; }

    [FunctionParameter(Label = "Vue Id", DefaultValue = "vueSearchResults")]
    public string VueId { get; set; }

    [FunctionParameter(Label = "", Help = "")]
    public BaseSearchViewModel Results { get; set; }

    [FunctionParameter(Label = "", Help = "", DefaultValue = true)]
    public bool ShowPagination { get; set; }
}
@{ 
    var FallbackImageUrl = Results.ProductSearchResults.SearchResults.FirstOrDefault()?.FallbackImageUrl;
}

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:f="http://www.composite.net/ns/function/1.0"
      xmlns:v-bind="v-bind" xmlns:v-on="v-on">
<head>
    @GeneralHelpers.RenderFallbackImageScript(FallbackImageUrl)
</head>
<body>
    <div data-oc-controller="Product.SearchResults"
         data-context="@JsonConvert.SerializeObject(Results, new Newtonsoft.Json.Converters.StringEnumConverter())"
         data-vueid="@VueId"
         v-cloak="true"
         id="@VueId"
         class="search-results">
        @if (ShowPagination)
        {
            <div class="row filters-row mb-4" v-if="TotalCount > 0">
                <div class="col-6 d-lg-none">
                    @FacetHelpers.FacetsModalCollapseBtn()
                </div>
                <div class="col-6 col-md-5">
                    @SearchHelpers.SortBy()
                </div>
                <div class="col-6 col-md-7 d-none d-lg-block">
                    @SearchHelpers.PaginationDropdown()
                </div>
            </div>
        }

        <!-- Search results -->
        <div class="busy-container" v-bind:class="{'busy' : IsBusy }" style="min-height: 300px">
            @GeneralHelpers.LoadingSpinner()
            <div class="row">
                <div v-for="(Product, index) in ExtendedSearchResults" v-bind:key="Product.ProductId"
                     class="@ColumnsStyle  mb-2" data-qa="search-results">
                    @Function("Composer.Search.Products.ProductTileVue")
                </div>
            </div>
        </div>

        @if (ShowPagination)
        {
            <div class="row d-block pt-2" v-if="TotalCount > 0">
                @SearchHelpers.Pagination()
            </div>
        }
    </div>
</body>
</html>

