@inherits RazorFunction
@using Orckestra.Composer.ViewModels.MenuNavigation
@using Orckestra.Composer.ViewModels.Home;
@using Orckestra.Composer.CompositeC1.Mappers;
@using Orckestra.Composer.CompositeC1.DataTypes.Navigation;

@functions {
    public INavigationMapper HomeNavigationMapper { get; set; }
}

@{
    var websiteId = SitemapNavigator.CurrentHomePageId;
    var mainMenuData = Data.Get<MainMenu>().Where(x => x.PageId == websiteId).ToList();
    var optionalLinksData = Data.Get<HeaderOptionalLink>().Where(x => x.PageId == websiteId).ToList();

    var mainMenu = HomeNavigationMapper.MapMainMenuItems(mainMenuData) as IEnumerable<HomeMainMenuEntryViewModel>;
    var optionalLinks = HomeNavigationMapper.MapHeaderOptionalLinksItems(optionalLinksData) as IEnumerable<OptionalLinkEntryViewModel>;
}

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:f="http://www.composite.net/ns/function/1.0">
<head>
</head>
<body>
    <div class="main-nav nav-tabs">
        <div class="container-md">
            <nav class="navbar navbar-expand-md megamenu p-0">
                <div id="main-nav-collapse" class="collapse navbar-collapse">
                    <ul class="nav navbar-nav w-100" role="menubar">
                        @foreach (var mainMenuEntry in mainMenu)
                        {
                            <li class="nav-item dropdown main-nav-fw  @mainMenuEntry.CssClassName">

                                @if (mainMenuEntry.HasChildren)
                                {
                                    <a href="@mainMenuEntry.Url"
                                       data-qa="main-menu-category"
                                       role="button"
                                       class="dropdown-toggle nav-link d-none d-md-block"
                                       aria-haspopup="true"
                                       target="@mainMenuEntry.UrlTarget"
                                       style="@mainMenuEntry.CssClass">
                                        @mainMenuEntry.DisplayName
                                    </a>

                                    <a data-target="#menu-@(mainMenuEntry.GetHashCode())"
                                       data-qa="main-menu-category"
                                       role="button"
                                       data-toggle="collapse"
                                       class="dropdown-toggle nav-link d-block d-md-none"
                                       aria-haspopup="true" aria-expanded="false" aria-controls="menu-@(mainMenuEntry.GetHashCode())" style="@mainMenuEntry.CssClass">
                                        @mainMenuEntry.DisplayName
                                        <span class="fa fa-chevron-down" aria-hidden="true"></span>
                                        <span class="fa fa-chevron-up" aria-hidden="true"></span>
                                    </a>

                                    <ul id="menu-@(mainMenuEntry.GetHashCode())" class="dropdown-menu">
                                        <li>
                                            @*Content container to add padding*@
                                            <div class="main-nav-content">
                                                <div class="row">
                                                    <div class="col-xl-8">
                                                        <ul class="nav-section list-unstyled flex-col">
                                                            <li class="main-nav-section d-lg-none">
                                                                <a data-qa="main-menu-link"
                                                                   href="@(mainMenuEntry.Url)"
                                                                   target="@mainMenuEntry.UrlTarget"
                                                                   class="d-md-block">
                                                                    View All @mainMenuEntry.DisplayName
                                                                </a>
                                                            </li>
                                                            @foreach (var subMenuEntry in @mainMenuEntry.Children as IEnumerable<HomeMainMenuEntryViewModel>)
                                                            {
                                                                @NavigationTree(subMenuEntry)
                                                            }
                                                        </ul>

                                                    </div>
                                                    <div class="col-xl-4 d-none d-lg-block">
                                                        <div class="main-image">
                                                            @Image(@mainMenuEntry)
                                                        </div>
                                                        @foreach (var subMenuEntry in @mainMenuEntry.Children as IEnumerable<HomeMainMenuEntryViewModel>)
                                                        {
                                                            <div id="menu-image-@(subMenuEntry.GetHashCode())" class="menu-image">
                                                                @Image(@subMenuEntry)
                                                            </div>
                                                            foreach (var subSubMenuEntry in @subMenuEntry.Children as IEnumerable<HomeMainMenuEntryViewModel>)
                                                            {
                                                                <div id="menu-image-@subSubMenuEntry.GetHashCode()" class="menu-image">
                                                                    @Image(@subSubMenuEntry)
                                                                </div>
                                                            }
                                                        }
                                                    </div>
                                                </div>
                                            </div>
                                        </li>
                                    </ul>
                                }
                                else
                                {
                                    <a href="@mainMenuEntry.Url"
                                       data-qa="main-menu-category-link"
                                       target="@mainMenuEntry.UrlTarget"
                                       style="@mainMenuEntry.CssClass"
                                       class="nav-link">
                                        @mainMenuEntry.DisplayName
                                    </a>
                                }
                            </li>
                        }
                    </ul>
                    @Function("Composer.Membership.SignInHeaderMobile")
                    @Function("Composer.Header.LanguageSwitсhMobile")
                </div>
            </nav>
        </div>
    </div>
</body>
</html>

@helper NavigationTree(HomeMainMenuEntryViewModel parentMenuEntry)
{
    var menuItems = parentMenuEntry.Children as IEnumerable<HomeMainMenuEntryViewModel>;

    <li class="main-nav-section @parentMenuEntry.CssClassName">

        @if (menuItems.Any())
        {
            <a data-qa="main-menu-section"
               href="@(parentMenuEntry.Url)"
               target="_self"
               class="main-nav-section-title d-none d-md-block"
               style="font-weight:bold; @parentMenuEntry.CssClass"
               data-image="@parentMenuEntry.GetHashCode()">
                @parentMenuEntry.DisplayName
            </a>
            <a data-qa="main-menu-section"
               data-target="#subMenu-@(parentMenuEntry.GetHashCode())"
               data-toggle="collapse"
               aria-expanded="false"
               aria-controls="subMenu-@(parentMenuEntry.GetHashCode())"
               role="button"
               class="main-nav-section-title d-block d-md-none"
               style="font-weight:bold;">
                @parentMenuEntry.DisplayName
                <span class="fa fa-chevron-down" aria-hidden="true"></span>
                <span class="fa fa-chevron-up" aria-hidden="true"></span>
            </a>
        }
        else
        {
            <a data-qa="main-menu-section"
               href="@(parentMenuEntry.Url)"
               target="_self"
               class="main-nav-section-title"
               style="font-weight:bold; @parentMenuEntry.CssClass"
               data-image="@parentMenuEntry.GetHashCode()">
                @parentMenuEntry.DisplayName
            </a>
        }
       @*SubNavigation Start If Any*@
        @if (menuItems.Any())
        {

            <ul class="list-unstyled sub-collapse collapse" id="subMenu-@(parentMenuEntry.GetHashCode())">
                <li class="main-nav-subsection d-lg-none">
                    <a data-qa="main-menu-link"
                       href="@(parentMenuEntry.Url)"
                       target="_self"
                       class="d-md-block d-lg-none">
                        View All @parentMenuEntry.DisplayName
                    </a>
                </li>
                @foreach (var menuItem in menuItems)
                {
                    if (!String.IsNullOrWhiteSpace(menuItem.DisplayName))
                    {
                        <li class="main-nav-subsection @menuItem.CssClassName">
                            <a data-qa="main-menu-link"
                               href="@(menuItem.Url)"
                               target="_self"
                               class="d-md-block  @menuItem.CssClass"
                               data-image="@menuItem.GetHashCode()">
                                @menuItem.DisplayName
                            </a>
                        </li>
                    }
                }
            </ul>
        }
    </li>
}

@helper Image(HomeMainMenuEntryViewModel vm)
{
    if (!string.IsNullOrEmpty(vm.Image.ImageSource))
    {
        if (!string.IsNullOrEmpty(vm.Image.ImageUrl))
        {
            <a href="@vm.Image.ImageUrl" target="@vm.Image.ImageUrlTarget">
                <img src="@vm.Image.ImageSource" class="img-responsive img-menu" />
            </a>
        }
        else
        {
            <img src="@vm.Image.ImageSource" class="img-fluid img-menu" />
        }
        if (!string.IsNullOrEmpty(vm.Image.ImageLabel))
        {
            <span class="caption">
                <span>@vm.Image.ImageLabel</span>
            </span>
        }
    }
}