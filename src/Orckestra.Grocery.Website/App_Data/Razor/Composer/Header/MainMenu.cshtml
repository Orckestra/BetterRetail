@inherits RazorFunction
@using Orckestra.Composer.ViewModels.Home;
@using Orckestra.Composer.CompositeC1.Mappers;
@using Orckestra.Composer.CompositeC1.DataTypes.Navigation;
@using Orckestra.Composer.CompositeC1.Providers.MainMenu

@functions {
    public INavigationMapper HomeNavigationMapper { get; set; }

    public IEnumerable<IMainMenuItemsProvider> ExternalMainMenuItemsProviders { get; set; }
}

@{
    var websiteId = SitemapNavigator.CurrentHomePageId;
    var mainMenuData = Data.Get<MainMenu>().Where(x => x.PageId == websiteId).ToList();

    var mainMenuData = Data.Get<MainMenu>().Where(x => x.PageId == websiteId).Select(i => new MainMenuItemWrapper()
    {
        Id = i.Id,
        DisplayName = i.DisplayName,
        CssClassName = i.CssClassName,
        ParentId = i.ParentId,
        CssStyle = i.CssStyle,
        Order = i.Order,
        Target = i.Target,
        Url = i.Url,
        SourceCultureName = i.SourceCultureName

    }).ToList();

    ExternalMainMenuItemsProviders?.ToList().ForEach(p =>
    {
        if (p.IsActive(websiteId))
        {
            var items = p.GetMainMenuItems(websiteId).ToList();
            mainMenuData.AddRange(items);
        }
    });

    var mainMenu = HomeNavigationMapper.MapMainMenuItems(mainMenuData) as IEnumerable<HomeMainMenuEntryViewModel>;
}

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:f="http://www.composite.net/ns/function/1.0">
<head>
</head>
<body>
    <div class="main-nav nav-tabs">
        <div class="container-md">
            <nav class="navbar navbar-expand-md megamenu p-0">
                <div id="main-nav-collapse" class="collapse navbar-collapse">
                    <ul class="nav navbar-nav w-100" role="menubar">
                        @foreach (var mainMenuEntry in mainMenu)
                        {
                            <li class="nav-item dropdown main-nav-fw @mainMenuEntry.CssClassName" role="none">

                                @if (mainMenuEntry.HasChildren)
                                {
                                    <a href="@mainMenuEntry.Url"
                                       data-qa="main-menu-category"
                                       role="menuitem"
                                       class="dropdown-toggle nav-link d-none d-md-block"
                                       aria-haspopup="true"
                                       target="@mainMenuEntry.UrlTarget"
                                       style="@mainMenuEntry.CssClass"
                                       data-image="@mainMenuEntry.GetHashCode()">
                                        @mainMenuEntry.DisplayName
                                    </a>

                                    <a data-target="#menu-@(mainMenuEntry.GetHashCode())"
                                       data-qa="main-menu-category"
                                       role="menuitem"
                                       data-toggle="collapse"
                                       class="dropdown-toggle nav-link d-block d-md-none"
                                       aria-haspopup="true" aria-expanded="false" aria-controls="menu-@(mainMenuEntry.GetHashCode())" style="@mainMenuEntry.CssClass">
                                        @mainMenuEntry.DisplayName
                                        <i class="fa fa-chevron-down" aria-hidden="true"></i>
                                        <i class="fa fa-chevron-up" aria-hidden="true"></i>
                                    </a>

                                    <ul id="menu-@(mainMenuEntry.GetHashCode())" class="dropdown-menu" role="menu">
                                        <li role="none">
                                            @*Content container to add padding*@
                                            <div class="main-nav-content">
                                                <div class="row">
                                                    <div class="col-xl-8">
                                                        <ul class="nav-section list-unstyled flex-col" role="none">
                                                            <li class="main-nav-section d-lg-none">
                                                                <a data-qa="main-menu-link"
                                                                   href="@(mainMenuEntry.Url)"
                                                                   target="@mainMenuEntry.UrlTarget"
                                                                   class="d-md-block"
                                                                   role="menuitem">
                                                                    @Html.Localize("General", "B_ViewAll") @mainMenuEntry.DisplayName
                                                                </a>
                                                            </li>
                                                            @foreach (var subMenuEntry in mainMenuEntry.Children as IEnumerable<HomeMainMenuEntryViewModel>)
                                                            {
                                                                @NavigationTree(subMenuEntry, mainMenuEntry)
                                                            }
                                                        </ul>

                                                    </div>
                                                    <div class="col-xl-4 d-none d-lg-block">

                                                        @Image(mainMenuEntry, mainMenuEntry.GetHashCode(), false)

                                                        @foreach (var subMenuEntry in mainMenuEntry.Children as IEnumerable<HomeMainMenuEntryViewModel>)
                                                        {

                                                            @Image(subMenuEntry, subMenuEntry.GetHashCode(), true)

                                                            foreach (var subSubMenuEntry in subMenuEntry.Children as IEnumerable<HomeMainMenuEntryViewModel>)
                                                            {

                                                                @Image(subSubMenuEntry, subSubMenuEntry.GetHashCode(), true)

                                                            }
                                                        }
                                                    </div>
                                                </div>
                                            </div>
                                        </li>
                                    </ul>
                                }
                                else
                                {
                                    <a href="@mainMenuEntry.Url"
                                       data-qa="main-menu-category-link"
                                       target="@mainMenuEntry.UrlTarget"
                                       style="@mainMenuEntry.CssClass"
                                       class="nav-link"
                                       role="menuitem">
                                        @mainMenuEntry.DisplayName
                                    </a>
                                }
                            </li>
                        }
                        @Function("Grocery.SelectedStoreInSticky")
                        @Function("Grocery.SignInSticky")
                    </ul>
                    @Function("Composer.Membership.SignInHeaderMobile")
                    @Function("Composer.Header.LanguageSwitchMobile")
                </div>
            </nav>
        </div>
    </div>
</body>
</html>

@helper NavigationTree(HomeMainMenuEntryViewModel menuEntry, HomeMainMenuEntryViewModel parentMenuEntry)
{
    var childItems = menuEntry.Children as IEnumerable<HomeMainMenuEntryViewModel>;
    var curImgId = !string.IsNullOrEmpty(menuEntry.Image.ImageSource) ? menuEntry.GetHashCode() : parentMenuEntry.GetHashCode();

    <li class="main-nav-section @menuEntry.CssClassName" role="none">

        @if (childItems.Any())
        {
            <a data-qa="main-menu-section"
               href="@menuEntry.Url"
               target="@menuEntry.UrlTarget"
               class="main-nav-section-title d-none d-md-block"
               style="font-weight:bold; @menuEntry.CssClass"
               data-image="@curImgId"
               role="menuitem"
               aria-haspopup="true">
                @menuEntry.DisplayName
            </a>
            <a data-qa="main-menu-section"
               data-target="#subMenu-@(menuEntry.GetHashCode())"
               data-toggle="collapse"
               aria-haspopup="true" aria-expanded="false" aria-controls="subMenu-@(menuEntry.GetHashCode())"
               role="menuitem"
               class="main-nav-section-title d-block d-md-none"
               style="font-weight:bold;">
                @menuEntry.DisplayName
                <i class="fa fa-chevron-down" aria-hidden="true"></i>
                <i class="fa fa-chevron-up" aria-hidden="true"></i>
            </a>
        }
        else
        {
            <a data-qa="main-menu-section"
               href="@menuEntry.Url"
               target="@menuEntry.UrlTarget"
               class="main-nav-section-title"
               style="font-weight:bold; @menuEntry.CssClass"
               data-image="@curImgId"
               role="menuitem">
                @menuEntry.DisplayName
            </a>
        }
        @*SubNavigation Start If Any*@
        @if (childItems.Any())
        {

            <ul class="list-unstyled sub-collapse collapse" id="subMenu-@(menuEntry.GetHashCode())" role="menu">
                <li class="main-nav-subsection d-lg-none" role="none">
                    <a data-qa="main-menu-link"
                       href="@menuEntry.Url"
                       target="@menuEntry.UrlTarget"
                       class="d-md-block d-lg-none"
                       role="menuitem">
                        @Html.Localize("General", "B_ViewAll") @menuEntry.DisplayName
                    </a>
                </li>
                @foreach (var childItem in childItems)
                {
                    var curChildImgId = !string.IsNullOrEmpty(childItem.Image.ImageSource) ? childItem.GetHashCode() : curImgId;

                    if (!String.IsNullOrWhiteSpace(childItem.DisplayName))
                    {
                        <li class="main-nav-subsection @childItem.CssClassName" role="none">
                            <a data-qa="main-menu-link"
                               href="@childItem.Url"
                               target="@childItem.UrlTarget"
                               class="d-md-block @childItem.CssClass"
                               data-image="@curChildImgId"
                               role="menuitem">
                                @childItem.DisplayName
                            </a>
                        </li>
                    }
                }
            </ul>
        }
    </li>
}

@helper Image(HomeMainMenuEntryViewModel vm, int id, bool isSubMenu)
{
    var imgId = "menu-image-" + id;
    var className = isSubMenu ? "menu-image" : "main-image";
    if (!string.IsNullOrEmpty(vm.Image.ImageSource))
    {
        <div id="@imgId" class="menu-image">
            @if (!string.IsNullOrEmpty(vm.Image.ImageUrl))
            {
                <a href="@vm.Image.ImageUrl" target="@vm.Image.ImageUrlTarget">
                    <img src="@vm.Image.ImageSource" class="img-fluid img-menu" />
                </a>
            }
            else
            {
                <img src="@vm.Image.ImageSource" class="img-fluid img-menu" />
            }
            @if (!string.IsNullOrEmpty(vm.Image.ImageLabel))
            {
                <span class="caption">
                    <span>@vm.Image.ImageLabel</span>
                </span>
            }
        </div>
    }
}