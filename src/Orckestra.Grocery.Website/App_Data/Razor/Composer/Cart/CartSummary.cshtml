@inherits RazorFunction
@using Orckestra.Composer.Cart

@functions {
    public override string FunctionDescription
    {
        get { return "Cart Summary"; }
    }
}

@{
    var isGrouped = CartConfiguration.GroupCartItemsByPrimaryCategory;
}

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:f="http://www.composite.net/ns/function/1.0" xmlns:v-bind="v-bind" xmlns:v-on="v-on">
<head>
</head>
<body>
    <div data-oc-controller="Cart.CartSummary">
        <div class="position-relative busy-container" v-bind:class="{ 'busy' : IsBusy }">
            @GeneralHelpers.LoadingSpinner()

            <div v-if="Cart">
                <div v-if="Cart.IsCartEmpty">
                    @EmptyCart()
                </div>
                <div v-else="else" class="card">
                    <div class="card-body bg-lighter pt-0 px-3">
                        @CartHeader()
                        <div v-if="Cart.InvalidLineItemCount > 0">
                            @CartSummaryHelpers.InvalideItemsMessage()
                        </div>
                        <div v-if="!Cart.IsCartEmpty" is="transition-group" name="items-list">
                            @if (isGrouped)
                            {
                                <div class="row" v-for="group in Cart.GroupedLineItemDetailViewModels" v-bind:key="group.TopLevelCategoryId">
                                    <h3 class="col-12 bg-dark text-white py-1 px-2 border-bottom border-top">
                                        {{group.TopLevelCategoryName}} ({{group.Quantity}})
                                    </h3>
                                    <div class="col-12 mb-3">
                                        @CartLineItemsList("group.LineItemDetailViewModels")
                                    </div>
                                </div>
                            }
                            else
                            {
                                @CartLineItemsList("Cart.LineItemDetailViewModels")
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</body>
</html>

@helper EmptyCart()
{
    <div class="row">
        <div class="col-lg-6">
            <p>@Html.Localize("ShoppingCart", "L_EmptyShoppingCart")</p>
            <a class="btn btn-primary btn-block btn-lg"
               data-qa="start-shopping"
               href="@HomePageNode.Url">
                @Html.Localize("ShoppingCart", "B_StartShopping")
            </a>
        </div>
    </div>
}

@helper CartHeader()
{
    <div class="row bg-lighter font-weight-bold cart-header-items py-2">
        <div class="col-9 col-sm-5 text-left">
            @Html.Localize("ShoppingCart", "T_ShoppingCart")
        </div>
        <div class="col-sm-2 text-center d-none d-sm-block">
            @Html.Localize("MyAccount", "L_UnitPrice")
        </div>
        <div class="col-sm-3 text-center d-none d-sm-block">
            @Html.Localize("MyAccount", "L_Quantity")
        </div>
        <div class=" col-3 col-sm-2 text-center d-none d-sm-block">
            @Html.Localize("MyAccount", "L_Subtotal")
        </div>
    </div>
}

@helper CartLineItemsList(string vueBinding)
{
<div v-bind:class="{'border-bottom pb-2': index != @(vueBinding).length - 1, 'border border-danger': !item.IsValid}"
     v-for="(item, index) in @vueBinding"
     v-bind:key="item.Id"
     v-bind:data-qa="'cart-item-' + index">
    <div v-if="item.IsGiftItem" class="row pt-0 giftitem">
        <i class="fa fa-gift" aria-hidden="true"></i><p>@Html.Localize("ShoppingCart", "L_GiftItem")</p>
    </div>
    <div class="row pt-3">
        <div v-if="item.Rewards &amp;&amp; item.Rewards.length" class="col-12 order-1 text-center">
            @CartSummaryHelpers.CartItemRewardsCell()
        </div>
        <div class="col-2 col-sm-1 order-2">
            @CartSummaryHelpers.CartItemImageCell()
        </div>
        <div class="col-8 col-sm-4 order-3">
            @CartSummaryHelpers.CartItemSummaryCell()
        </div>
        <div class="col-sm-2 text-center d-none d-sm-block order-4">
            @CartSummaryHelpers.CartItemDefaultPriceCell()
        </div>
        <div class="offset-2 offset-sm-0 2 col-sm-3 col-7 text-center text-sm-center order-6">
            @CartSummaryHelpers.CartItemQuantityCell()
        </div>
        <div class="offset-2 offset-sm-0 col-sm-2 text-left text-sm-center order-7">
            @CartSummaryHelpers.CartItemTotalCell()
        </div>
        <div class="col-2 d-block d-sm-none order-5">
            @CartSummaryHelpers.RemoveCartItemMobileBtn()
        </div>
        <div v-if="item.RecurringOrderProgramName" class="col-11 offset-2 offset-sm-1 order-8"
             data-oc-controller="Cart.ChangeRecurringFrequency">
            @RecurringOrderHelpers.CartItemRecurringOrderProgram("item")
        </div>
    </div>
</div>
}

