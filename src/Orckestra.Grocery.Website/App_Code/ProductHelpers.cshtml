@using Composite.AspNet.Razor

@* If DisplayCurrentQuantityInCart = True, the current product QTY in the Cart  will be displayed in QTY input.
      If product not yet in the Cart,  the 'Add' button will be displayed and when pressed, it will be changed to QTY input with  +/-.
      QTY input is used to update current QTY in the Cart;
      --------------------------------------------------------------------------------------------------------
    If DisplayCurrentQuantityInCart = False, the current QTY input and Add button will be presented together.
      First need to specify how many QTY need to add to the Cart, then press 'Add' button.
      After the QTY value will be changed to 1 - minimum value wich can be added;
      QTY input is used to add specified QTY to the Cart;
*@
@helper AddToCartWithQuantity(bool displayCurrentQuantityInCart = true)
{
    if (displayCurrentQuantityInCart)
    {
        <div class="row">
            <div class="col-sm-6 col-lg-4">
                <div id="vueAddToCartWithQuantityInCart" v-cloak="true" xmlns:v-bind="v-bind" xmlns:v-on="v-on">
                    <div v-if="Quantity > 0 &amp;&amp; IsAvailableToSell">
                        <div class="input-group text-center">
                            <div class="input-group-prepend">
                                <button class="btn btn-secondary"
                                        v-bind:disabled="DecrementDisabled"
                                        v-on:click="updateItemQuantity(Quantity - 1)"
                                        data-qa="product-quantity-decrease">
                                    <i class="fa fa-minus" aria-hidden="true"></i>
                                    <span class="sr-only">@Html.Localize("Accessibility", "B_QuantityDecrease")</span>
                                </button>
                            </div>

                            <label for="quantityField" class="sr-only">@Html.Localize("Accessibility", "L_Quantity")</label>
                            <input id="quantityField" class="form-control text-center" type="number"
                                   min="0" max="99"
                                   v-bind:value="Quantity"
                                   v-bind:disabled="Loading"
                                   v-on:keyup="$event.target.value = $event.target.value.replace(/\D/g,'')"
                                   v-on:change="updateItemQuantity($event.target.value)"
                                   xmlns:v-on="v-on"
                                   xmlns:v-bind="v-bind" />

                            <div class="input-group-append">
                                <button class="btn btn-secondary"
                                        v-bind:disabled="IncrementDisabled"
                                        v-on:click="updateItemQuantity(Quantity + 1)"
                                        data-qa="product-quantity-increase">
                                    <i class="fa fa-plus" aria-hidden="true"></i>
                                    <span class="sr-only">@Html.Localize("Accessibility", "B_QuantityIncrease")</span>
                                </button>
                            </div>
                        </div>
                    </div>
                    <div v-else="v-else">
                        @AddToCartButton()
                    </div>
                </div>
            </div>
        </div>

    }
    else
    {
        <div id="vueAddToCartWithQuantity" v-cloak="true" xmlns:v-bind="v-bind" xmlns:v-on="v-on">
            <div class="row">
                <div class="col-sm-6 col-lg-4">
                    <div class="input-group text-center">
                        <div class="input-group-prepend">
                            <button class="btn   btn-secondary"
                                    v-bind:disabled="DecrementDisabled"
                                    v-on:click="updateQuantity(Quantity - 1)"
                                    data-qa="product-quantity-decrease">
                                <i class="fa fa-minus" aria-hidden="true"></i>
                                <span class="sr-only">@Html.Localize("Accessibility", "B_QuantityDecrease")</span>
                            </button>
                        </div>

                        <label for="quantityField" class="sr-only">@Html.Localize("Accessibility", "L_Quantity")</label>
                        <input id="quantityField" class="form-control text-center" type="number"
                               min="0" max="99"
                               v-bind:value="Quantity"
                               v-bind:disabled="AddToCartDisabled"
                               v-on:keyup="$event.target.value = $event.target.value.replace(/\D/g,'')"
                               v-on:change="updateQuantity($event.target.value)"
                               xmlns:v-on="v-on"
                               xmlns:v-bind="v-bind" />

                        <div class="input-group-append">
                            <button class="btn btn-secondary"
                                    v-bind:disabled="IncrementDisabled"
                                    v-on:click="updateQuantity(Quantity + 1)"
                                    data-qa="product-quantity-increase">
                                <i class="fa fa-plus" aria-hidden="true"></i>
                                <span class="sr-only">@Html.Localize("Accessibility", "B_QuantityIncrease")</span>
                            </button>
                        </div>
                    </div>
                </div>
                <div class="col-sm-6 col-lg-4 mt-2 mt-sm-0">@AddToCartButton()</div>
            </div>
        </div>
    }
}

@helper AddToCartButton()
{
    <button class="btn btn-primary btn-block"
            v-bind:disabled="AddToCartDisabled"
            v-on:click="addItemToCart">
        <i v-if="IsAvailableToSell" class="fa fa-shopping-cart" aria-hidden="true"></i>&#160;
        <i v-if="!IsAvailableToSell" class="fa fa-times" aria-hidden="true"></i>&#160;

        <span v-if="IsUnavailableVariant">@Html.Localize("General", "B_AddToCartProductDetailUnavailable")</span>
        <span v-else="else">
            <span v-if="IsAvailableToSell">@Html.Localize("General", "B_AddToCartProductDetail")</span>
            <span v-if="!IsAvailableToSell">@Html.Localize("General", "B_AddToCartProductDetailOOS")</span>
        </span>

    </button>
}

@helper AddToWishList()
{
    <div id="vueAddProductToWishList"
         v-cloak="true" xmlns:v-bind="v-bind" xmlns:v-on="v-on">
        <div v-if="!IsUnavailableVariant" class="add-to-wishlist">
            <a v-if="WishListItem"
               href="#"
               data-qa="product-remove-from-wishlist"
               v-on:click.prevent="removeLineItemFromWishList"
               class="add-to-wishlist text-danger"
               role="button">
                <i class="fa fa-2x fa-heart" aria-hidden="true"></i>
                <span class="sr-only">@Html.Localize("MyAccount", "H_RemoveFromTheWishList")</span>
            </a>
            <a v-else="else"
               href="#"
               data-qa="product-add-to-wishlist"
               v-on:click.prevent="addLineItemToWishList"
               class="add-to-wishlist"
               role="button">
                <i class="fa fa-2x fa-heart-o" aria-hidden="true"></i>
                <span class="sr-only">@Html.Localize("MyAccount", "H_AddToWishList")</span>
            </a>
        </div>
    </div>
}

@helper AddToCartButtonWithQuantity(string itemName = "Product", string disabledInput = "Loading", string addToCartString = "")
{
    addToCartString = String.IsNullOrEmpty(addToCartString) ? @Html.Localize("General", "B_AddToCartProductList") : addToCartString;

    <div v-if="(@itemName).IsAvailableToSell">
        <div v-if="(@itemName).InCart &amp;&amp; (@itemName).Quantity > 0" class="input-group text-center">
            <div class="input-group-prepend">
                <button class="btn btn-secondary"
                        v-bind:disabled="Loading"
                        v-on:mouseup.stop="updateItemQuantity((@itemName), (@itemName).Quantity - 1)"
                        v-on:keyup.enter="updateItemQuantity((@itemName), (@itemName).Quantity - 1)"
                        data-qa="product-quantity-decrease"
                        type="button">
                    <i class="fa fa-minus" aria-hidden="true"></i>
                    <span class="sr-only">@Html.Localize("Accessibility", "B_QuantityDecrease")</span>
                </button>
            </div>

            <label v-bind:for="'quantityButtonField-' + (@itemName).ProductId" class="sr-only">@Html.Localize("Accessibility", "L_Quantity")</label>
            <input v-bind:id="'quantityButtonField-' + (@itemName).ProductId" class="form-control text-center btn-quantity" type="number"
                   min="0" max="99"
                   v-bind:value="(@itemName).Quantity"
                   v-bind:disabled="@disabledInput"
                   v-on:keyup="$event.target.value = $event.target.value.replace(/\D/g,'')"
                   v-on:change="updateItemQuantity((@itemName), $event.target.value)"
                   xmlns:v-on="v-on"
                   xmlns:v-bind="v-bind" />

            <div class="input-group-append">
                <button class="btn btn-secondary"
                        v-bind:disabled="Loading"
                        v-on:mouseup.stop="updateItemQuantity((@itemName), (@itemName).Quantity + 1)"
                        v-on:keyup.enter="updateItemQuantity((@itemName), (@itemName).Quantity + 1)"
                        data-qa="product-quantity-increase"
                        type="button">
                    <i class="fa fa-plus" aria-hidden="true"></i>
                    <span class="sr-only">@Html.Localize("Accessibility", "B_QuantityIncrease")</span>
                </button>
            </div>
        </div>
        <button v-else="else"
                class="btn btn-primary btn-block text-uppercase"
                v-bind:disabled="Loading"
                data-qa="search-buy-now"
                v-on:mouseup.stop="addToCart($event, (@itemName))"
                v-on:keyup.enter="addToCart($event, (@itemName))">
            <i class="fa fa-shopping-cart" aria-hidden="true"></i>&#160;
            @addToCartString
        </button>
    </div>
    <div v-else="else">
        <button class="btn btn-primary btn-block text-uppercase"
                data-qa="search-buy-now"
                disabled="disabled">
            <i class="fa fa-times" aria-hidden="true"></i>&#160;
            @Html.Localize("General", "B_AddToCartProductDetailOOS")
        </button>
    </div>
}

@helper PriceBasedOnUnitMeasure(string valueBinding = "Product")
{
    <div class="product-tile-price">
        <small class="display-price" v-bind:class="{'text-danger order-2' : @(valueBinding).IsOnSale}">
            <span v-if="@(valueBinding).HasPriceRange">
                @Html.Localize("List-Search", "L_PriceFrom")
            </span>
            <span class="h4" v-if="@(valueBinding).IsOnSale">
                {{@(valueBinding).DisplaySpecialPrice}}
            </span>
            <span class="h4" v-else="else">
                {{@(valueBinding).DisplayListPrice}}
            </span>
            <span v-if="@(valueBinding).IsWeightedProduct">@Html.Localize("ProductPage", "L_Per"){{@(valueBinding).ProductUnitSize}}{{@(valueBinding).ProductUnitMeasure}}</span>
        </small>
        <span v-if="@(valueBinding).IsOnSale" class="original-price" v-bind:class="{'order-1 d-block' : @(valueBinding).IsOnSale}">
            &nbsp;<del>{{@(valueBinding).DisplayListPrice}}</del>
        </span>

        <span v-if="@(valueBinding).PricePerUnit" class="product-tile-price-per-unit" v-bind:class="{'order-3' : @(valueBinding).IsOnSale}">
            <span v-if="@(valueBinding).IsPricePerUnitZero">@Html.Localize("ProductPage", "L_LessThan") {{@(valueBinding).PricePerUnit.replace('0.00', '0.01')}}</span>
            <span v-else="v-else">{{@(valueBinding).PricePerUnit}}</span>
            @Html.Localize("ProductPage", "L_Per")
            <span v-if="@(valueBinding).BaseProductSize != 1 ">{{@(valueBinding).BaseProductSize}}&nbsp;</span>{{@(valueBinding).BaseProductMeasure}}
        </span>
    </div>
}

@helper PromotionalRibbon(string entity = "Product")
{
    <div v-if="@(entity).PromotionalRibbon" class="product-tile-ribbon-holder">
        <div class="product-tile-ribbon ribbon-top-right">
            <span v-bind:class="[@(entity).PromotionalRibbonBackgroundColor, @(entity).PromotionalRibbonTextColor]">
                {{@(entity).PromotionalRibbon}}
            </span>
        </div>
    </div>
}

@helper PromotionalBanner(string entity = "Product")
{
    <div v-if="@(entity).PromotionalBanner" class="product-tile-banner">
        <span v-bind:class="[@(entity).PromotionalBannerBackgroundColor, @(entity).PromotionalBannerTextColor]" class="w-100 p-1">
            {{@(entity).PromotionalBanner}}
        </span>
    </div>
}

@helper ProductBadges(string entity = "Product")
{
    <ul v-if="@(entity).ProductBadgeValues" class="product-tile-badges list-unstyled">
        <li v-for="(name, key) in @(entity).ProductBadgeValues"><img v-bind:src="'/UI.Package/Images/badge/' + key + '.svg'" v-bind:alt="name" /></li>
    </ul>
}

